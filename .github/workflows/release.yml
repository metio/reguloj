name: Perform Release
on:
  schedule:
    - cron:  '35 7 * * TUE'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          java-version: 16
          distribution: 'adopt'
      - uses: actions/cache@v2.1.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Create Release Version
        id: release
        run: echo "::set-output name=version::$(date +'%Y.%-m.%-d')"
      - name: Count commits in last week
        id: commits
        run: echo "::set-output name=count::$(git rev-list --count HEAD --since='last Tuesday')"
      - name: Set release version
        run: mvn --batch-mode versions:set -DnewVersion=${{steps.release.outputs.version}} -DgenerateBackupPoms=false
      - id: gpg
        name: GPG Key
        run: echo "${{ secrets.GPG_SECRET_KEY_BASE64 }}" | base64 --decode > $GITHUB_WORKSPACE/signing.key.asc
      - name: Publish to Maven Central
        if: steps.commits.outputs.count > 0
        run: mvn --batch-mode --activate-profiles release verify deploy -Dpgp.secretkey=keyfile:$GITHUB_WORKSPACE/signing.key.asc -Dpgp.passphrase=literal:${{ secrets.GPG_SECRET_KEY_PASSWORD }}
        env:
          MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
      - name: Create Release
        if: steps.commits.outputs.count > 0
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{steps.release.outputs.version}}
          release_name: Release ${{steps.release.outputs.version}}
          draft: false
          prerelease: false
          body: |
            Automated release, see [commits](https://github.com/metio/reguloj/commits/${{ steps.release.outputs.version }}) for changes.

            Include this project as a dependency:
            ```xml
            <dependency>
              <groupId>wtf.metio.reguloj</groupId>
              <artifactId>reguloj</artifactId>
              <version>${{steps.release.outputs.version}}</version>
            </dependency>
            ```
      - name: Send Mail
        if: steps.commits.outputs.count > 0
        uses: dawidd6/action-send-mail@v2
        with:
          server_address: ${{ secrets.MAIL_SERVER }}
          server_port: ${{ secrets.MAIL_PORT }}
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: reguloj release ${{ steps.release.outputs.version }}
          body: See https://github.com/metio/reguloj/releases/tag/${{ steps.release.outputs.version }} for details.
          to: reguloj@metio.groups.io
          from: ${{ secrets.MAIL_SENDER }}
      - id: matrix
        name: Send Matrix Message
        uses: s3krit/matrix-message-action@v0.0.3
        with:
          room_id: ${{ secrets.MATRIX_ROOM_ID }}
          access_token: ${{ secrets.MATRIX_ACCESS_TOKEN }}
          message: "release ${{ needs.prepare.outputs.release_version }} published - see https://github.com/metio/reguloj/releases/tag/${{ needs.prepare.outputs.release_version }} for details"
          server: "matrix.org"
